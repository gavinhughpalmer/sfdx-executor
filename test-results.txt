yarn run v1.22.5
$ tsc
$ nyc --extension .ts mocha --forbid-only "test/**/*.test.ts"


  executor:run
    ✓ runs Error with Propagating (1377ms)
    ✓ runs Error with Finnally Command (1503ms)
    ✓ runs Error with On Error Command (1189ms)
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

    ✓ runs Successful Command (1662ms)
    ✓ runs Plan With Arguments (1442ms)
Executing Plan with Arguments...
Executing 'sfdx force ${0}'...

                    An error has occured, you can rerun using "sfdx executor:run -p /Users/gavinpalmer/workspace/Salesforce/sfdx-executor/test/commands/executor/test-plans.json -c planWithArguments  --resume 0"
                    or if you wish to skip the current command "sfdx executor:run -p /Users/gavinpalmer/workspace/Salesforce/sfdx-executor/test/commands/executor/test-plans.json -c planWithArguments  --resume 1"
                
    ✓ runs Plan without Arguments (1455ms)
    ✓ runs Plan With Multiple Arguments (1465ms)
    ✓ runs Parallel Commands
    ✓ runs Invalid File Path
    ✓ runs Invalid Command Name
    ✓ runs Plan with no Tasks

  Executor
    ✓ Should throw an exception for an unsupported task
    ✓ Should throw an exception for an unsupported command
    ✓ Replace multiple arguments passed in
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

    ✓ Ignore arguments that aren't in the command (1470ms)
    ✓ Error for Arguments that don't exist
    ✓ Error when arguments aren't passed in but refrenced

  Resolve File System Tasks
    ✓ should error for without a command specified

  Resolve Parallel Tasks
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation


COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

    ✓ should resolve for both successful commands (within the same timeframe) (1596ms)
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

    ✓ should reject for an unsuccessful command (2476ms)
    ✓ should error for nested parallel commands
    ✓ should error when parallelTasks aren't specified
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

    ✓ should replace argument placeholders (1998ms)

  Resolve SFDX Tasks
USAGE
  $ sfdx force [--json] [--loglevel 
  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]

OPTIONS
  --json
      format output as json

  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA
  L)
      [default: warn] logging level for this command invocation

COMMANDS
  force:analytics    work with analytics assets
  force:apex         work with Apex code
  force:auth         authorize an org for use with the Salesforce CLI
  force:cmdt         create and update custom metadata types and their records
  force:community    create and publish a community
  force:data         manipulate records in your org
  force:lightning    create Aura components and Lightning web components, and
                     test Aura components
  force:limits       view your org’s limits
  force:mdapi        retrieve and deploy metadata using Metadata API
  force:org          manage your orgs
  force:package      develop and install packages
  force:package1     develop first-generation managed and unmanaged packages
  force:project      set up a Salesforce DX project
  force:schema       view standard and custom objects
  force:source       sync your project with your orgs
  force:user         perform user-related admin tasks
  force:visualforce  create and edit Visualforce files

    ✓ should resolve for a successful command (1729ms)
    ✓ should error for invalid arguments (2078ms)
    ✓ should error for without a command specified

  Replace All
    ✓ should combine all values of a string
    ✓ should return null on null value
    ✓ should do nothing on null term
    ✓ should clear on null replacement


  30 passing (21s)

-------------------|---------|----------|---------|---------|-------------------
File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------------|---------|----------|---------|---------|-------------------
All files          |    83.1 |    75.81 |   68.42 |   82.86 |                   
 commands/executor |     100 |    95.45 |     100 |     100 |                   
  run.ts           |     100 |    95.45 |     100 |     100 | 52                
 main              |   94.74 |    81.25 |     100 |   94.59 |                   
  executor.ts      |   92.86 |       70 |     100 |   92.86 | 39,47             
  task.ts          |     100 |      100 |     100 |     100 |                   
  utilities.ts     |     100 |      100 |     100 |     100 |                   
 main/executors    |   60.71 |    54.17 |      50 |   60.71 |                   
  file-system.ts   |   34.38 |    21.43 |   16.67 |   34.38 | 8-43,62-63        
  parallel.ts      |     100 |      100 |     100 |     100 |                   
  sfdx.ts          |   91.67 |      100 |      75 |   91.67 | 22                
-------------------|---------|----------|---------|---------|-------------------
$ tslint -p test -t stylish
Done in 29.04s.
